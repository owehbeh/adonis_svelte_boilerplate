// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator jsonSchema {
  provider = "prisma-json-schema-generator"
}

model User {
  id              String        @id @unique @default(cuid())
  name            String
  email           String        @unique
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  validated       Boolean       @default(false)
  password        String
  rememberMeToken String?
  superAdmin      Boolean       @default(false)
  note            Note[]
  organization    Organization? @relation(fields: [organizationId], references: [id])
  organizationId  String?
  request         Request[]
  customer        Customer[]
  supplier        Supplier[]
  item            Item[]
  role            Role?         @relation(fields: [roleId], references: [id])
  roleId          String?
}

model Note {
  id    String @id @unique @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user           User?        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId         String?
  request        Request[]
  item           Item[]
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
}

model Request {
  id             String       @id @unique @default(cuid())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  customer       Customer     @relation(fields: [customerId], references: [id])
  createdBy      User         @relation(fields: [userId], references: [id])
  note           Note?        @relation(fields: [noteId], references: [id])
  customerId     String
  userId         String
  noteId         String?
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
}

model Customer {
  id             String       @id @unique @default(cuid())
  name           String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  createdBy      User         @relation(fields: [userId], references: [id])
  warehouses     Warehouse[]
  Request        Request[]
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  userId         String
}

model Supplier {
  id             String       @id @unique @default(cuid())
  name           String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  createdBy      User         @relation(fields: [userId], references: [id])
  warehouses     Warehouse[]
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  userId         String
  taxId          String?
  item           Item[]
}

model Organization {
  id        String      @id @unique @default(cuid())
  name      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  slug      String      @unique
  user      User[]
  request   Request[]
  customer  Customer[]
  supplier  Supplier[]
  role      Role[]
  Item      Item[]
  Address   Address[]
  Warehouse Warehouse[]
  Note      Note[]
}

model Item {
  id             String       @id @unique @default(cuid())
  name           String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  supplier       Supplier?    @relation(fields: [supplierId], references: [id])
  note           Note?        @relation(fields: [noteId], references: [id])
  createdBy      User         @relation(fields: [userId], references: [id])
  price          Decimal?
  oldPrice       Decimal?
  supplierId     String?
  noteId         String?
  userId         String
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
}

model Role {
  id             String       @id @unique @default(cuid())
  name           String       @unique
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  permissions    Json         @default("[]")
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  user           User[]
}

model Address {
  id              String       @id @unique @default(cuid())
  name            String
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  description     String?
  country         String?
  city            String?
  street          String?
  moreInformation String?
  Warehouse       Warehouse?   @relation(fields: [warehouseId], references: [id])
  warehouseId     String?
  organization    Organization @relation(fields: [organizationId], references: [id])
  organizationId  String
}

model Warehouse {
  id             String       @id @unique @default(cuid())
  name           String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  locations      Address[]
  customer       Customer?    @relation(fields: [customerId], references: [id])
  customerId     String?
  supplier       Supplier?    @relation(fields: [supplierId], references: [id])
  supplierId     String?
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
}
